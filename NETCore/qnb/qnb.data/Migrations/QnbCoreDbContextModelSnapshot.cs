// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace qnb.data.Migrations
{
    [DbContext(typeof(QnbCoreDbContext))]
    partial class QnbCoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("Code")
                        .HasMaxLength(8);

                    b.Property<ZonedDateTime>("CreatedAt");

                    b.Property<ZonedDateTime?>("DeletedAt");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.Property<ZonedDateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<ZonedDateTime>("CreatedAt");

                    b.Property<ZonedDateTime?>("DeletedAt");

                    b.Property<int>("DisplayOrder");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.Property<ZonedDateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("DisplayOrder");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Application", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Applications")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Category_App")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
